#!/bin/bash

function test_one
{
   test_id=$1

   progname=test_${test_id}

   csmith > $progname.c
   clang -I $TUUT/all/include/csmith-2.2.0 -c -emit-llvm $progname.c
   clang -I $TUUT/all/include/csmith-2.2.0 -o $progname.bin $progname.c

   $progname.bin > $test_id.bin.out
   lli --force-interpreter $test_id.bc > $test_id.lli.out

   diff -q $test_id.bin.out $test_id.lli.out
   diff_status=$?
   echo diff status=\"$diff_status\" '(should be 0)'
   if [ $diff_status -eq "0" ]; then
      mv $progname.c GOOD
   else
      echo WARNING: different output on test $test_id.
      mv $progname.* $test_id.*.out BAD
   fi

   return $diff_status
}

function timed_test_one
{
   test_id=$1

   start_time=`date +%s`
   test_one $test_id
   status=$?
   stop_time=`date +%s`
   
   delta_s=$(( $stop_time - $start_time ))
   delta_min=$(( $delta_s / 60 ))
   delta_rem_s=$(( $delta_s % 60 ))

   if [ $status -eq 0 ]; then
      dest_dir=GOOD
   else
      dest_dir=BAD
   fi
   printf "  elapsed time %u:%2.2u (%u s)\n" \
      $delta_min $delta_rem_s $delta_s | \
      tee $dest_dir/$test_id.summary
   echo "diff status=" $status >> $dest_dir/$test_id.summary
}

# ==========================================================================
# main program

# ==========================================================================
# setup
if [ ! -d BAD ]; then
   mkdir BAD
fi
if [ ! -d GOOD ]; then
   mkdir GOOD
fi
run_id=`date +%Y%b%d_%H%M%S`

# ==========================================================================
# start running tests
test_num=0
while true; do
   test_id=${run_id}_$test_num
   echo running $test_id at `date`
   timed_test_one $test_id
   test_num=$(($test_num+1))
done

# ==========================================================================
# end of program
